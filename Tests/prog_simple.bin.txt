
*** Sauvegarde des programmes et donn√©es initiales en format binaire ***

Instruction text[] = {
    0x00000002, 0x00001102, 0x00001145, 0x00007606, 
    0x00000004, 0x00001145, 0x00003006, 0x00002003, 
    0x0000000b, 0x00000000, 0x00000000, 0x00000000, 
};
unsigned textsize = 12;

Word data[] = {
    0x0000000a, 0x00000005, 0x00000014, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 
};
unsigned datasize = 20;
unsigned dataend = 5;

*** Machine state before execution ***

*** PROGRAM (size: 12) ***
0x0000: 0x00000002 	 LOAD R00, @0x0000
0x0001: 0x00001102 	 LOAD R01, @0x0001
0x0002: 0x00001145 	 SUB R01, #1
0x0003: 0x00007606 	 BRANCH LE, @0x0007
0x0004: 0x00000004 	 ADD R00, @0x0000
0x0005: 0x00001145 	 SUB R01, #1
0x0006: 0x00003006 	 BRANCH NC, @0x0003
0x0007: 0x00002003 	 STORE R00, @0x0002
0x0008: 0x0000000b 	 HALT 
0x0009: 0x00000000 	 ILLOP 
0x000a: 0x00000000 	 ILLOP 
0x000b: 0x00000000 	 ILLOP 

*** DATA (size: 20, end = 0x00000005 (5)) ***
0x0000: 0x0000000a 10     0x0001: 0x00000005 5      0x0002: 0x00000014 20     
0x0003: 0x00000000 0      0x0004: 0x00000000 0      0x0005: 0x00000000 0      
0x0006: 0x00000000 0      0x0007: 0x00000000 0      0x0008: 0x00000000 0      
0x0009: 0x00000000 0      0x000a: 0x00000000 0      0x000b: 0x00000000 0      
0x000c: 0x00000000 0      0x000d: 0x00000000 0      0x000e: 0x00000000 0      
0x000f: 0x00000000 0      0x0010: 0x00000000 0      0x0011: 0x00000000 0      
0x0012: 0x00000000 0      0x0013: 0x00000000 0      


*** CPU ***
PC:  0x00000000   CC: U

R00: 0x00000000 0      R01: 0x00000000 0      R02: 0x00000000 0      
R03: 0x00000000 0      R04: 0x00000000 0      R05: 0x00000000 0      
R06: 0x00000000 0      R07: 0x00000000 0      R08: 0x00000000 0      
R09: 0x00000000 0      R10: 0x00000000 0      R11: 0x00000000 0      
R12: 0x00000000 0      R13: 0x00000000 0      R14: 0x00000000 0      
R15: 0x00000013 19     


*** Execution trace ***

TRACE: Executing: 0x0000: LOAD R00, @0x0000
TRACE: Executing: 0x0001: LOAD R01, @0x0001
TRACE: Executing: 0x0002: SUB R01, #1
TRACE: Executing: 0x0003: BRANCH LE, @0x0007
TRACE: Executing: 0x0004: ADD R00, @0x0000
TRACE: Executing: 0x0005: SUB R01, #1
TRACE: Executing: 0x0006: BRANCH NC, @0x0003
TRACE: Executing: 0x0003: BRANCH LE, @0x0007
TRACE: Executing: 0x0004: ADD R00, @0x0000
TRACE: Executing: 0x0005: SUB R01, #1
TRACE: Executing: 0x0006: BRANCH NC, @0x0003
TRACE: Executing: 0x0003: BRANCH LE, @0x0007
TRACE: Executing: 0x0004: ADD R00, @0x0000
TRACE: Executing: 0x0005: SUB R01, #1
TRACE: Executing: 0x0006: BRANCH NC, @0x0003
TRACE: Executing: 0x0003: BRANCH LE, @0x0007
TRACE: Executing: 0x0004: ADD R00, @0x0000
TRACE: Executing: 0x0005: SUB R01, #1
TRACE: Executing: 0x0006: BRANCH NC, @0x0003
TRACE: Executing: 0x0003: BRANCH LE, @0x0007
TRACE: Executing: 0x0007: STORE R00, @0x0002
TRACE: Executing: 0x0008: HALT 

*** Machine state after execution ***

*** CPU ***
PC:  0x00000009   CC: Z

R00: 0x00000032 50     R01: 0x00000000 0      R02: 0x00000000 0      
R03: 0x00000000 0      R04: 0x00000000 0      R05: 0x00000000 0      
R06: 0x00000000 0      R07: 0x00000000 0      R08: 0x00000000 0      
R09: 0x00000000 0      R10: 0x00000000 0      R11: 0x00000000 0      
R12: 0x00000000 0      R13: 0x00000000 0      R14: 0x00000000 0      
R15: 0x00000013 19     

*** DATA (size: 20, end = 0x00000005 (5)) ***
0x0000: 0x0000000a 10     0x0001: 0x00000005 5      0x0002: 0x00000032 50     
0x0003: 0x00000000 0      0x0004: 0x00000000 0      0x0005: 0x00000000 0      
0x0006: 0x00000000 0      0x0007: 0x00000000 0      0x0008: 0x00000000 0      
0x0009: 0x00000000 0      0x000a: 0x00000000 0      0x000b: 0x00000000 0      
0x000c: 0x00000000 0      0x000d: 0x00000000 0      0x000e: 0x00000000 0      
0x000f: 0x00000000 0      0x0010: 0x00000000 0      0x0011: 0x00000000 0      
0x0012: 0x00000000 0      0x0013: 0x00000000 0      

